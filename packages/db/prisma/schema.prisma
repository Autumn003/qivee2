// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  name        String 
  email       String      @unique
  password    String
  number      String?     @unique
  avatar      String?
  role        userRole    @default(USER)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orders      Order[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String
  price       Float
  stock       Int
  images      String[]
  category    productCategory
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id          String      @id @default(uuid())
  tatalPrice  Float
  status      OrderStatus @default(PROCESSING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String
  user         User       @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  id          String      @id @default(uuid())
  orderId     String
  productId   String
  quantity    String
  price       Decimal
  order       Order       @relation(fields: [orderId], references: [id])
  product     Product     @relation(fields: [productId], references: [id])
}


enum OrderStatus{
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum userRole{
  ADMIN
  USER
}

enum productCategory{
  baby_products
  mobile_accessories
  women_bagpacks
}


